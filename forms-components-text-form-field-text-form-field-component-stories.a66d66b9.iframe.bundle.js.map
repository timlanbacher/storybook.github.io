{"version":3,"file":"forms-components-text-form-field-text-form-field-component-stories.a66d66b9.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://tca-shared-ui/./projects/tca-shared-portal/forms/components/text-form-field/text-form-field.component.ts","webpack://tca-shared-ui/./projects/tca-shared-portal/forms/components/text-form-field/text-form-field..component.stories.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./text-form-field.component.html?ngResource\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nlet TcaTextFormFieldComponent = class TcaTextFormFieldComponent {\r\n    constructor() {\r\n        this.hideLabel = false;\r\n        this.maxLength = 100;\r\n        this.placeholder = null;\r\n        this.floatLabel = 'auto';\r\n        this.autoFocus = false;\r\n        this.preventScroll = true;\r\n        // eslint-disable-next-line @angular-eslint/no-output-native\r\n        this.blur = new EventEmitter();\r\n    }\r\n};\r\nTcaTextFormFieldComponent.propDecorators = {\r\n    name: [{ type: Input }],\r\n    label: [{ type: Input }],\r\n    hideLabel: [{ type: Input }],\r\n    control: [{ type: Input }],\r\n    maxLength: [{ type: Input }],\r\n    translation: [{ type: Input }],\r\n    placeholder: [{ type: Input }],\r\n    floatLabel: [{ type: Input }],\r\n    autoFocus: [{ type: Input }],\r\n    preventScroll: [{ type: Input }],\r\n    tabindex: [{ type: Input }],\r\n    suffix: [{ type: Input }],\r\n    prefix: [{ type: Input }],\r\n    blur: [{ type: Output }]\r\n};\r\nTcaTextFormFieldComponent = __decorate([\r\n    Component({\r\n        selector: 'tca-text-form-field',\r\n        template: __NG_CLI_RESOURCE__0,\r\n    })\r\n], TcaTextFormFieldComponent);\r\nexport { TcaTextFormFieldComponent };\r\n","import { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { moduleMetadata } from '@storybook/angular';\r\nimport { TcaTextFormFieldComponent } from './text-form-field.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nexport default {\r\n    /* 👇 The title prop is optional.\r\n     * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n     * to learn how to generate automatic titles\r\n     */\r\n    title: 'TextFormField',\r\n    component: TcaTextFormFieldComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            declarations: [],\r\n            imports: [\r\n                MatInputModule,\r\n                BrowserAnimationsModule,\r\n                MatFormFieldModule,\r\n                ReactiveFormsModule,\r\n                FormsModule,\r\n            ],\r\n            providers: [],\r\n        }),\r\n    ],\r\n};\r\n//👇 We create a “template” of how args map to rendering\r\nlet Template = (args) => ({\r\n    props: {\r\n        control: new FormControl(),\r\n    },\r\n});\r\nexport let TextFormField = Template.bind({});\r\nTextFormField.args = {\r\n    control: new FormControl(),\r\n};\r\n"],"names":[],"sourceRoot":""}